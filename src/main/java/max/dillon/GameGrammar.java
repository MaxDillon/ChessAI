// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/game_grammar.proto

package max.dillon;

public final class GameGrammar {
  private GameGrammar() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code max.dillon.Symmetry}
   */
  public enum Symmetry
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>REFLECT = 0;</code>
     */
    REFLECT(0),
    /**
     * <code>ROTATE = 1;</code>
     */
    ROTATE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>REFLECT = 0;</code>
     */
    public static final int REFLECT_VALUE = 0;
    /**
     * <code>ROTATE = 1;</code>
     */
    public static final int ROTATE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Symmetry valueOf(int value) {
      return forNumber(value);
    }

    public static Symmetry forNumber(int value) {
      switch (value) {
        case 0: return REFLECT;
        case 1: return ROTATE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Symmetry>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Symmetry> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Symmetry>() {
            public Symmetry findValueByNumber(int number) {
              return Symmetry.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return max.dillon.GameGrammar.getDescriptor().getEnumTypes().get(0);
    }

    private static final Symmetry[] VALUES = values();

    public static Symmetry valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Symmetry(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:max.dillon.Symmetry)
  }

  public interface GameSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:max.dillon.GameSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>uint32 board_size = 2;</code>
     */
    int getBoardSize();

    /**
     * <code>.max.dillon.Symmetry board_symmetry = 3;</code>
     */
    int getBoardSymmetryValue();
    /**
     * <code>.max.dillon.Symmetry board_symmetry = 3;</code>
     */
    max.dillon.GameGrammar.Symmetry getBoardSymmetry();
  }
  /**
   * Protobuf type {@code max.dillon.GameSpec}
   */
  public  static final class GameSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:max.dillon.GameSpec)
      GameSpecOrBuilder {
    // Use GameSpec.newBuilder() to construct.
    private GameSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameSpec() {
      name_ = "";
      boardSize_ = 0;
      boardSymmetry_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GameSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              boardSize_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              boardSymmetry_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return max.dillon.GameGrammar.internal_static_max_dillon_GameSpec_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return max.dillon.GameGrammar.internal_static_max_dillon_GameSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              max.dillon.GameGrammar.GameSpec.class, max.dillon.GameGrammar.GameSpec.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BOARD_SIZE_FIELD_NUMBER = 2;
    private int boardSize_;
    /**
     * <code>uint32 board_size = 2;</code>
     */
    public int getBoardSize() {
      return boardSize_;
    }

    public static final int BOARD_SYMMETRY_FIELD_NUMBER = 3;
    private int boardSymmetry_;
    /**
     * <code>.max.dillon.Symmetry board_symmetry = 3;</code>
     */
    public int getBoardSymmetryValue() {
      return boardSymmetry_;
    }
    /**
     * <code>.max.dillon.Symmetry board_symmetry = 3;</code>
     */
    public max.dillon.GameGrammar.Symmetry getBoardSymmetry() {
      max.dillon.GameGrammar.Symmetry result = max.dillon.GameGrammar.Symmetry.valueOf(boardSymmetry_);
      return result == null ? max.dillon.GameGrammar.Symmetry.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (boardSize_ != 0) {
        output.writeUInt32(2, boardSize_);
      }
      if (boardSymmetry_ != max.dillon.GameGrammar.Symmetry.REFLECT.getNumber()) {
        output.writeEnum(3, boardSymmetry_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (boardSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, boardSize_);
      }
      if (boardSymmetry_ != max.dillon.GameGrammar.Symmetry.REFLECT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, boardSymmetry_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof max.dillon.GameGrammar.GameSpec)) {
        return super.equals(obj);
      }
      max.dillon.GameGrammar.GameSpec other = (max.dillon.GameGrammar.GameSpec) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && (getBoardSize()
          == other.getBoardSize());
      result = result && boardSymmetry_ == other.boardSymmetry_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + BOARD_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getBoardSize();
      hash = (37 * hash) + BOARD_SYMMETRY_FIELD_NUMBER;
      hash = (53 * hash) + boardSymmetry_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static max.dillon.GameGrammar.GameSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static max.dillon.GameGrammar.GameSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static max.dillon.GameGrammar.GameSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static max.dillon.GameGrammar.GameSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static max.dillon.GameGrammar.GameSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static max.dillon.GameGrammar.GameSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static max.dillon.GameGrammar.GameSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static max.dillon.GameGrammar.GameSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static max.dillon.GameGrammar.GameSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static max.dillon.GameGrammar.GameSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static max.dillon.GameGrammar.GameSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static max.dillon.GameGrammar.GameSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(max.dillon.GameGrammar.GameSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code max.dillon.GameSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:max.dillon.GameSpec)
        max.dillon.GameGrammar.GameSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return max.dillon.GameGrammar.internal_static_max_dillon_GameSpec_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return max.dillon.GameGrammar.internal_static_max_dillon_GameSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                max.dillon.GameGrammar.GameSpec.class, max.dillon.GameGrammar.GameSpec.Builder.class);
      }

      // Construct using max.dillon.GameGrammar.GameSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        boardSize_ = 0;

        boardSymmetry_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return max.dillon.GameGrammar.internal_static_max_dillon_GameSpec_descriptor;
      }

      public max.dillon.GameGrammar.GameSpec getDefaultInstanceForType() {
        return max.dillon.GameGrammar.GameSpec.getDefaultInstance();
      }

      public max.dillon.GameGrammar.GameSpec build() {
        max.dillon.GameGrammar.GameSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public max.dillon.GameGrammar.GameSpec buildPartial() {
        max.dillon.GameGrammar.GameSpec result = new max.dillon.GameGrammar.GameSpec(this);
        result.name_ = name_;
        result.boardSize_ = boardSize_;
        result.boardSymmetry_ = boardSymmetry_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof max.dillon.GameGrammar.GameSpec) {
          return mergeFrom((max.dillon.GameGrammar.GameSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(max.dillon.GameGrammar.GameSpec other) {
        if (other == max.dillon.GameGrammar.GameSpec.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getBoardSize() != 0) {
          setBoardSize(other.getBoardSize());
        }
        if (other.boardSymmetry_ != 0) {
          setBoardSymmetryValue(other.getBoardSymmetryValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        max.dillon.GameGrammar.GameSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (max.dillon.GameGrammar.GameSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int boardSize_ ;
      /**
       * <code>uint32 board_size = 2;</code>
       */
      public int getBoardSize() {
        return boardSize_;
      }
      /**
       * <code>uint32 board_size = 2;</code>
       */
      public Builder setBoardSize(int value) {
        
        boardSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 board_size = 2;</code>
       */
      public Builder clearBoardSize() {
        
        boardSize_ = 0;
        onChanged();
        return this;
      }

      private int boardSymmetry_ = 0;
      /**
       * <code>.max.dillon.Symmetry board_symmetry = 3;</code>
       */
      public int getBoardSymmetryValue() {
        return boardSymmetry_;
      }
      /**
       * <code>.max.dillon.Symmetry board_symmetry = 3;</code>
       */
      public Builder setBoardSymmetryValue(int value) {
        boardSymmetry_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.max.dillon.Symmetry board_symmetry = 3;</code>
       */
      public max.dillon.GameGrammar.Symmetry getBoardSymmetry() {
        max.dillon.GameGrammar.Symmetry result = max.dillon.GameGrammar.Symmetry.valueOf(boardSymmetry_);
        return result == null ? max.dillon.GameGrammar.Symmetry.UNRECOGNIZED : result;
      }
      /**
       * <code>.max.dillon.Symmetry board_symmetry = 3;</code>
       */
      public Builder setBoardSymmetry(max.dillon.GameGrammar.Symmetry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        boardSymmetry_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.max.dillon.Symmetry board_symmetry = 3;</code>
       */
      public Builder clearBoardSymmetry() {
        
        boardSymmetry_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:max.dillon.GameSpec)
    }

    // @@protoc_insertion_point(class_scope:max.dillon.GameSpec)
    private static final max.dillon.GameGrammar.GameSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new max.dillon.GameGrammar.GameSpec();
    }

    public static max.dillon.GameGrammar.GameSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GameSpec>
        PARSER = new com.google.protobuf.AbstractParser<GameSpec>() {
      public GameSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GameSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameSpec> getParserForType() {
      return PARSER;
    }

    public max.dillon.GameGrammar.GameSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_max_dillon_GameSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_max_dillon_GameSpec_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!src/main/proto/game_grammar.proto\022\nmax" +
      ".dillon\"Z\n\010GameSpec\022\014\n\004name\030\001 \001(\t\022\022\n\nboa" +
      "rd_size\030\002 \001(\r\022,\n\016board_symmetry\030\003 \001(\0162\024." +
      "max.dillon.Symmetry*#\n\010Symmetry\022\013\n\007REFLE" +
      "CT\020\000\022\n\n\006ROTATE\020\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_max_dillon_GameSpec_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_max_dillon_GameSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_max_dillon_GameSpec_descriptor,
        new java.lang.String[] { "Name", "BoardSize", "BoardSymmetry", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
